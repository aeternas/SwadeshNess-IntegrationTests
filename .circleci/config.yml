aliases:
  - &get_deps go get -v -t -d ./...
  - &docker_worker
    - image: circleci/golang:$GOLANG_VERSION
  - &work_dir /go/src/github.com/aeternas/SwadeshNess-IntegrationTests
  - &git_checkout
    name: Checkout
    command: |
      mkdir -p ~/.ssh && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      git clone --depth 1 -b $CIRCLE_BRANCH $CIRCLE_REPOSITORY_URL ./ && \
      git reset --hard $CIRCLE_SHA1
  - &attach_workspace
    at: *work_dir
  - &save_cache
    key: v1-dep-{{ .Branch }}-{{ epoch }}
    paths:
    - vendor/bundle
    - ~/virtualenvs
    - ~/.m2
    - ~/.ivy2
    - ~/.bundle
    - ~/.go_workspace
    - ~/.cache/bower
  - &restore_cache
    keys:
    - v1-dep-{{ .Branch }}-
  - &lint
    name: Install & Execute linter
    command: |
        curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin latest && \
        golangci-lint run -vvv
  - &test
    name: tests
    command: go test -v ./...
  - &setup_remote_docker
    setup_remote_docker:
      docker_layer_caching: false
  - &containerize_push_deploy
    name: Containerize, Push and Deploy
    command: |
      echo $DOCKER_PASSWORD > docker_passwd && \
      docker login -u $DOCKER_USERNAME --password-stdin < docker_passwd && rm docker_passwd && \
      docker build --build-arg GOLANG_VERSION=$GOLANG_VERSION -t aeternas/swadeshness-tests:$CIRCLE_BRANCH . && \
      docker push aeternas/swadeshness-tests:$CIRCLE_BRANCH
      if [[ $CIRCLE_BRANCH == "master" ]]; then \
                                      docker tag aeternas/swadeshness-tests:master aeternas/swadeshness-tests:latest && \
                                      docker push aeternas/swadeshness-tests:latest; fi
  - &persist_to_workspace
      root: .
      paths:
        - .
version: 2.1
jobs:
  checkout:
    docker: *docker_worker
    working_directory: *work_dir
    steps:
      - run: *git_checkout
      - restore_cache: *restore_cache
      - run: *get_deps
      - save_cache: *save_cache
      - persist_to_workspace: *persist_to_workspace
  lint:
    docker: *docker_worker
    working_directory: *work_dir
    steps:
      - attach_workspace: *attach_workspace
      - run: *get_deps
      - run: *lint
  test:
    docker: *docker_worker
    working_directory: *work_dir
    steps:
      - attach_workspace: *attach_workspace
      - run: *get_deps
      - run: *test
  build_and_deploy:
    docker: *docker_worker
    working_directory: *work_dir
    steps:
      - attach_workspace: *attach_workspace
      - *setup_remote_docker
      - run: *containerize_push_deploy

workflows:
  version: 2.1
  lint-test-deploy:
    jobs:
      - checkout
      - lint:
          requires:
            - checkout
      - test:
          requires:
            - checkout
      - build_and_deploy:
          filters:
            branches:
              only:
                - master
                - development
          requires:
            - lint
            - test
